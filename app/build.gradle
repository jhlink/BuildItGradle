apply plugin: 'com.android.application'
apply plugin: 'com.google.cloud.tools.endpoints-framework-client'

android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"

    defaultConfig {
        applicationId "com.udacity.gradle.builditbigger"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        buildTypes.each {
            it.resValue "string", "ADMOBS_APP_ID", getKey("ADMOB_KEY")
        }
    }
    flavorDimensions "version"
    productFlavors {
        free {
            dimension "version"
            applicationIdSuffix ".free"
            versionNameSuffix "-free"
        }
        paid {
            dimension "version"
            applicationIdSuffix ".paid"
            versionNameSuffix "-paid"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    endpointsServer project(path: ':backend', configuration: 'endpoints')
    implementation('com.android.support:appcompat-v7:28.0.0', {
        exclude group: 'com.android.support', module: 'customtabs'
    })

    freeImplementation 'com.google.android.gms:play-services-ads:17.1.3'

    implementation 'com.google.api-client:google-api-client:1.23.0'
    implementation 'com.google.http-client:google-http-client-android:1.23.0'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    testImplementation 'junit:junit:4.12'

    implementation project(':jokedisplayer')
}

task setupGceAndTestAll {
    group = 'verification'
    description = "Run instrumented tests"
    dependsOn ':backend:appengineStart'
    mustRunAfter ':backend:appengineStart'
    dependsOn 'connectedAndroidTest'
    finalizedBy ':backend:appengineStop'

}

//  Writing this down for future reference. Suggested by Udacity reviewer.
//      Incredibly simple, and definitely a snippet worth saving.
//task customTask {
//    group = 'verification'
//    dependsOn(":backend:appengineStart")
//    mustRunAfter(":backend:appengineStart")
//    dependsOn("connectedAndroidTest")
//    finalizedBy ":backend:appengineStop"
//}


def getKey(String property) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file('ENV_KEYS').newDataInputStream())
    return properties.getProperty(property)
}
